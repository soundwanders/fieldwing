<!-- WeeklyGameResults.svelte -->
<script>
  import { onMount } from 'svelte';
  import { CFBD_API_KEY } from '$env/static/private';
  import { selectedTeams, gameResults } from '$lib/store';

  /**
   * @param {any} teams
   * @param {string | undefined} apiKey
   */
  async function fetchGameData(teams, apiKey) {
    try {
      const results = [];

      // Structure our date and times to modify the API call to include only the most recent week of college football games
      // Calculate the current year
      const currentYear = new Date().getFullYear();

      // Calculate the start date for the college football season
      const collegeFootballStartDate = new Date(currentYear, 7, 30); // August is month 7 (0-based index).

      // Calculate the current week for college football
      const currentDate = new Date();
      const millisecondsPerWeek = 7 * 24 * 60 * 60 * 1000;
      const currentWeek = Math.ceil((currentDate.getTime() - collegeFootballStartDate.getTime()) / millisecondsPerWeek);

      for (const team of teams) {
        const url = `https://api.collegefootballdata.com/games?year=${currentYear}&week=${currentWeek}&team=${team}`;

        const response = await fetch(url, {
          headers: {
            // Writing 'Bearer' before the API key is required for successfully authorization
            'Authorization': `Bearer ${apiKey}`,
          },
        });

        if (!response.ok) {
          throw new Error(`Failed to fetch game results for ${team}`);
        }

        const data = await response.json();

        results.push({ team, games: data });
        console.log('results', results)
      }

      return results;
    } catch (error) {
      throw error;
    }
  }

  async function fetchGameResults() {
    try {
      const gameResultsData = await fetchGameData(selectedTeams, CFBD_API_KEY);
      
      // Update the gameResults store
      gameResults.set(gameResultsData);
      console.log('gameResults', gameResults)
    } catch (error) {
      console.error('Failed to fetch game results:', error);
    }
  }

  onMount(fetchGameResults);
</script>
